1. Devtools dependency works only when automatic build is on in IDE(i.e. Eclipse)
2.When using profile there are two ways in which you can use property files from different ENV
i.e.
application.properties
application-test.properties
application-dev.properties
application-prod.properties

  2.1 Either you access them using @Value annotation or 
  2.2 You define a component with @ConfigurationProperties annotation.And autowire this bean wherever you want.This approach seems better.


3.Spring boot app + ELK stack.

4.IOC:
1.
public class SortingAlgorithImpl{
	BubbleSortAlgorithm bsa =  new BubbleSortAlgorithm ();
}
2.
@Component
public class SortingAlgorithImpl{
	@Autowired
	SortingAlgorthim sortingAlgorthim ;
}

5. RestController:

A convenience annotation that is itself annotated with @Controller and @ResponseBody. 
Types that carry this annotation are treated as controllers where @RequestMapping methods assume @ResponseBody semantics by default. 

6.RequestMapping:
Annotation for mapping web requests onto methods in request-handling classeswith flexible method signatures. 

Both Spring MVC and Spring WebFlux support this annotation through a RequestMappingHandlerMapping and RequestMappingHandlerAdapterin their respective modules and package structure. For the exact list ofsupported handler method arguments and return types in each, please use thereference documentation links below: 
•Spring MVC Method Argumentsand Return Values 
•Spring WebFlux Method Argumentsand Return Values 

7.
org.springframework.context.annotation.Bean

Indicates that a method produces a bean to be managed by the Spring container. 

8.CommandLineRunner

@FunctionalInterface


Interface used to indicate that a bean should run when it is contained withina SpringApplication.
Multiple CommandLineRunner beans can be definedwithin the same application context and 
can be ordered using the Orderedinterface or @Order annotation. 


9.@SpringBootApplication


@SpringBootConfiguration
@EnableAutoConfiguration
@ComponentScan

10.@SpringBootConfiguration

Indicates that a class provides Spring Boot application @Configuration.
Can be used as an alternative to the Spring's standard @Configuration annotation so that configuration can be found automatically (for example in tests). 
11.@EnableAutoConfiguration

Enable auto-configuration of the Spring Application Context, attempting to guess andconfigure beans that you are likely to need.
Auto-configuration classes are usuallyapplied based on your classpath and what beans you have defined.
For example, if youhave tomcat-embedded.jar on your classpath you are likely to want a TomcatServletWebServerFactory (unless you have defined your own ServletWebServerFactory bean). 

11.Spring Cloud Sleuth
A powerful tool for enhancing logs in any application, but especially in a system built up of multiple services.
