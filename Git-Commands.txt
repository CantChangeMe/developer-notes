Commands(Steps) to push code from branch to master.
1.Create branch and checkout from master
git checkout -b new-branch-name

and make changes to files
2.Add to staging.
git add file fileName.java or
git add folder-Name

3.Commit the code 
git commit -m "commit changes"

4.Push the changes to branch
git push origin branch-to-add-in-reamme2

5.Push these changes to master branch
git push origin HEAD:master

6.Now switch to master branch & take a pull
git checkout master
git pull

#Basic steps to commit a change in git
1.Make change
2.Add the change
3.Commit the change with message.

#To see recent commits
7.git log --oneline

#To push after reset hard.
8.git push -f origin feature/DEX-8664

#Commit message best practices
should be in present tense.
git commit -m "Fixes a css issue."

#Search commits by commit message
git log --grep "Commits containing this message."

#Adding all files to Staging 
git add .

#Unstage a file 
git reset HEAD fileName.js
(content of fileName.js HEAD will replaced by 
content in HEAD)

#If you are working {branch | master} and you wish to discard changes 
in working directory.
git checkout -- fileName.js

#To show difference between working directory and staging
git diff

#To show difference between staging and repository
git diff --staged
or
git diff --cached(not so populary used)

#To delete a file from remote branch
1.git rm -fileName.js(adds to staging as deleted)
2.git commit -m "delete message"




